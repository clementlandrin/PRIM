#version 450

#pragma optionNV unroll all

layout(location=0) in vec3 position;
layout(location=1) in vec3 normal;

struct LightSource
{
	vec4 position;
	vec4 color_and_intensity;
};

uniform LightSource lightSources[12];

out vec4 fNormal;
out vec4 fPosition;
out LightSource fLightSources[12];

mat4 model_view_matrix = mat4(
			      0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.66667, 0.57735, 0.00000,
			      -0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.00000, -17, 1.00000);
mat4 projection_matrix = mat4(
			      15.00000, 0.00000, 0.00000, 0.00000,
			      0.00000, 15.00000, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.00020, -1.00000,
			      0.00000, 0.00000, -10.00100, 0.00000);

void main() {
  fPosition = projection_matrix * model_view_matrix * vec4(position, 1.0);
  gl_Position = fPosition;
  fNormal = normalize(projection_matrix * model_view_matrix * vec4(normal, 1.0));
  for (int i = 0; i < 12; i++)
  {
	fLightSources[i].position = projection_matrix * model_view_matrix * lightSources[i].position;
    fLightSources[i].color_and_intensity = lightSources[i].color_and_intensity;
  }
}